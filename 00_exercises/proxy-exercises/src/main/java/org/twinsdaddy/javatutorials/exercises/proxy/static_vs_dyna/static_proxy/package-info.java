/**
 * https://blog.csdn.net/ikownyou/article/details/53081426
 * <p>
 * == 静态代理 ==
 * <p>
 * 所谓静态也就是在程序运行前就已经存在代理类的字节码文件。代理类和委托类的关系在运行前就确定了。
 * <p>
 * 实现要素：
 * 1. 代理接口： 定义业务接口
 * 2. 委托类： 具体处理业务
 * 3. 静态代理类： 负责请求的预处理、过滤、将请求分派给委托类处理、以及委托类执行完请求后的后续处理。
 * 4. 代理类工厂： 生成静态代理类
 * 5. 客户类： 发送请求
 * <p>
 * 静态代理类优缺点：
 * 优点：业务类只需要关注业务逻辑本身，保证了业务类的重用性。这是代理的共有优点。
 * 缺点：
 * 1）代理对象的一个接口只服务于一种类型的对象，如果要代理的方法很多，势必要为每一种方法都进行代理，静态代理在程序规模稍大时就无法胜任了。
 * 2）如果接口增加一个方法，除了所有实现类需要实现这个方法外，所有代理类也需要实现此方法。增加了代码维护的复杂度。
 */
package org.twinsdaddy.javatutorials.exercises.proxy.static_vs_dyna.static_proxy;